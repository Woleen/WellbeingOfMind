// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wellbeing_of_mind.Infastructure;

#nullable disable

namespace wellbeing_of_mind.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20231208234438_newQuestionsandAnswers")]
    partial class newQuestionsandAnswers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("wellbeing_of_mind.Domain.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("wellbeing_of_mind.Domain.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChoiceContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChoiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChoiceContent = "I do not worry",
                            ChoiceType = "No Anxiety",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            ChoiceContent = "Sometimes",
                            ChoiceType = "Mild Anxiety",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            ChoiceContent = "Almost every day",
                            ChoiceType = "Severe Anxiety",
                            QuestionId = 1
                        });
                });

            modelBuilder.Entity("wellbeing_of_mind.Domain.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("QuestionContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionContent = "How often have you been bothered by becoming easily annoyed or irritable over the last two weeks ?"
                        },
                        new
                        {
                            Id = 2,
                            QuestionContent = "Do you have trouble relaxing ?"
                        },
                        new
                        {
                            Id = 3,
                            QuestionContent = "How often do you worry about things that might go wrong?"
                        },
                        new
                        {
                            Id = 4,
                            QuestionContent = "Do you experience physical symptoms such as trembling, sweating, or a racing heart when anxious?"
                        },
                        new
                        {
                            Id = 5,
                            QuestionContent = "How often have you been bothered by not being able to stop or control worrying over the last two weeks?"
                        },
                        new
                        {
                            Id = 6,
                            QuestionContent = "How often do you find it difficult to make a decision?"
                        });
                });

            modelBuilder.Entity("wellbeing_of_mind.Domain.Choice", b =>
                {
                    b.HasOne("wellbeing_of_mind.Domain.Question", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("wellbeing_of_mind.Domain.Question", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
